0
input_words: ['CLS', 'Which', 'staff', 'have', 'contacted', 'which', 'engineers', '?', 'List', 'the', 'staff', 'name', 'and', 'the', 'engineer', 'first', 'name', 'and', 'last', 'name', '.', 'CLS', '*', 'text', 'CLS', 'company', 'id', 'number', 'CLS', 'company', 'type', 'text', 'CLS', 'company', 'name', 'text', 'CLS', 'company', 'address', 'text', 'CLS', 'other', 'company', 'detail', 'text', 'CLS', 'maintenance', 'contract', 'id', 'number', 'CLS', 'maintenance', 'contract', 'company', 'id', 'number', 'CLS', 'contract', 'start', 'date', 'time', 'CLS', 'contract', 'end', 'date', 'time', 'CLS', 'other', 'contract', 'detail', 'text', 'CLS', 'part', 'id', 'number', 'CLS', 'part', 'name', 'text', 'CLS', 'chargeable', 'yn', 'text', 'CLS', 'chargeable', 'amount', 'text', 'CLS', 'other', 'part', 'detail', 'text', 'CLS', 'skill', 'id', 'number', 'CLS', 'skill', 'code', 'text', 'CLS', 'skill', 'description', 'text', 'CLS', 'staff', 'id', 'number', 'CLS', 'staff', 'name', 'text', 'CLS', 'gender', 'text', 'CLS', 'other', 'staff', 'detail', 'text', 'CLS', 'asset', 'id', 'number', 'CLS', 'maintenance', 'contract', 'id', 'number', 'CLS', 'supplier', 'company', 'id', 'number', 'CLS', 'asset', 'detail', 'text', 'CLS', 'asset', 'make', 'text', 'CLS', 'asset', 'model', 'text', 'CLS', 'asset', 'acquire', 'date', 'time', 'CLS', 'asset', 'dispose', 'date', 'time', 'CLS', 'other', 'asset', 'detail', 'text', 'CLS', 'asset', 'id', 'number', 'CLS', 'part', 'id', 'number', 'CLS', 'engineer', 'id', 'number', 'CLS', 'company', 'id', 'number', 'CLS', 'first', 'name', 'text', 'CLS', 'last', 'name', 'text', 'CLS', 'other', 'detail', 'text', 'CLS', 'engineer', 'id', 'number', 'CLS', 'skill', 'id', 'number', 'CLS', 'fault', 'log', 'entry', 'id', 'number', 'CLS', 'asset', 'id', 'number', 'CLS', 'record', 'by', 'staff', 'id', 'number', 'CLS', 'fault', 'log', 'entry', 'datetime', 'time', 'CLS', 'fault', 'description', 'text', 'CLS', 'other', 'fault', 'detail', 'text', 'CLS', 'engineer', 'visit', 'id', 'number', 'CLS', 'contact', 'staff', 'id', 'number', 'CLS', 'engineer', 'id', 'number', 'CLS', 'fault', 'log', 'entry', 'id', 'number', 'CLS', 'fault', 'status', 'text', 'CLS', 'visit', 'start', 'datetime', 'time', 'CLS', 'visit', 'end', 'datetime', 'time', 'CLS', 'other', 'visit', 'detail', 'text', 'CLS', 'part', 'fault', 'id', 'number', 'CLS', 'part', 'id', 'number', 'CLS', 'fault', 'short', 'name', 'text', 'CLS', 'fault', 'description', 'text', 'CLS', 'other', 'fault', 'detail', 'text', 'CLS', 'fault', 'log', 'entry', 'id', 'number', 'CLS', 'part', 'fault', 'id', 'number', 'CLS', 'fault', 'status', 'text', 'CLS', 'part', 'fault', 'id', 'number', 'CLS', 'skill', 'id', 'number', 'CLS', 'third', 'party', 'company', 'CLS', 'maintenance', 'contract', 'CLS', 'part', 'CLS', 'skill', 'CLS', 'staff', 'CLS', 'asset', 'CLS', 'asset', 'part', 'CLS', 'maintenance', 'engineer', 'CLS', 'engineer', 'skill', 'CLS', 'fault', 'log', 'CLS', 'engineer', 'visit', 'CLS', 'part', 'fault', 'CLS', 'fault', 'log', 'part', 'CLS', 'skill', 'require', 'to', 'fix
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> And(cond left, cond right)]', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 404, 980, 980, 856, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
1
input_words: ['CLS', 'Which', 'claim', 'processing', 'stage', 'has', 'the', 'most', 'claims', '?', 'Show', 'the', 'claim', 'status', 'name', '.', 'CLS', '*', 'text', 'CLS', 'customer', 'id', 'number', 'CLS', 'customer', 'detail', 'text', 'CLS', 'staff', 'id', 'number', 'CLS', 'staff', 'detail', 'text', 'CLS', 'policy', 'id', 'number', 'CLS', 'customer', 'id', 'number', 'CLS', 'policy', 'type', 'code', 'text', 'CLS', 'start', 'date', 'time', 'CLS', 'end', 'date', 'time', 'CLS', 'claim', 'header', 'id', 'number', 'CLS', 'claim', 'status', 'code', 'text', 'CLS', 'claim', 'type', 'code', 'text', 'CLS', 'policy', 'id', 'number', 'CLS', 'date', 'of', 'claim', 'time', 'CLS', 'date', 'of', 'settlement', 'time', 'CLS', 'amount', 'claim', 'number', 'CLS', 'amount', 'piad', 'number', 'CLS', 'claim', 'id', 'number', 'CLS', 'document', 'type', 'code', 'text', 'CLS', 'create', 'by', 'staff', 'id', 'number', 'CLS', 'create', 'date', 'number', 'CLS', 'claim', 'stage', 'id', 'number', 'CLS', 'next', 'claim', 'stage', 'id', 'number', 'CLS', 'claim', 'status', 'name', 'text', 'CLS', 'claim', 'status', 'description', 'text', 'CLS', 'claim', 'process', 'id', 'number', 'CLS', 'claim', 'id', 'number', 'CLS', 'claim', 'outcome', 'code', 'text', 'CLS', 'claim', 'stage', 'id', 'number', 'CLS', 'staff', 'id', 'number', 'CLS', 'customer', 'CLS', 'staff', 'CLS', 'policy', 'CLS', 'claim', 'header', 'CLS', 'claim', 'document', 'CLS', 'claim', 'processing', 'stage', 'CLS', 'claim', 'processing
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[order_by -> order_by(order order, val_unit* val_units)]', 'ApplyRule[order -> Desc()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> Count()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'IntPrimitive[1]', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 980, 80, 912, 980, 221, 980, 980, 1546, 1026, 1115, 80, 28, 980, 221, 980, 980, 980, 671, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
2
input_words: ['CLS', 'What', 'are', 'the', 'first', 'names', ',', 'office', 'locations', 'of', 'all', 'lecturers', 'who', 'have', 'taught', 'some', 'course', '?', 'CLS', '*', 'text', 'CLS', 'class', 'code', 'text', 'CLS', 'course', 'code', 'text', 'CLS', 'class', 'section', 'text', 'CLS', 'class', 'time', 'text', 'CLS', 'class', 'room', 'text', 'CLS', 'professor', 'employee', 'number', 'number', 'CLS', 'course', 'code', 'text', 'CLS', 'department', 'code', 'text', 'CLS', 'course', 'description', 'text', 'CLS', 'course', 'credit', 'number', 'CLS', 'department', 'code', 'text', 'CLS', 'department', 'name', 'text', 'CLS', 'school', 'code', 'text', 'CLS', 'employee', 'number', 'number', 'CLS', 'department', 'address', 'text', 'CLS', 'department', 'extension', 'text', 'CLS', 'employee', 'number', 'number', 'CLS', 'employee', 'last', 'name', 'text', 'CLS', 'employee', 'first', 'name', 'text', 'CLS', 'employee', 'initial', 'text', 'CLS', 'employee', 'job', 'code', 'text', 'CLS', 'employee', 'hire', 'date', 'time', 'CLS', 'employee', 'date', 'of', 'birth', 'time', 'CLS', 'class', 'code', 'text', 'CLS', 'student', 'number', 'number', 'CLS', 'enroll', 'grade', 'text', 'CLS', 'employee', 'number', 'number', 'CLS', 'department', 'code', 'text', 'CLS', 'professor', 'office', 'text', 'CLS', 'professor', 'extension', 'text', 'CLS', 'professor', 'high', 'degree', 'text', 'CLS', 'student', 'num', 'number', 'CLS', 'student', 'last', 'name', 'text', 'CLS', 'student', 'first', 'name', 'text', 'CLS', 'student', 'init', 'text', 'CLS', 'student', 'date', 'of', 'birth', 'time', 'CLS', 'student', 'class', 'hour', 'take', 'number', 'CLS', 'student', 'class', 'text', 'CLS', 'student', 'gpa', 'number', 'CLS', 'student', 'transfer', 'number', 'CLS', 'department', 'code', 'text', 'CLS', 'student', 'phone', 'text', 'CLS', 'professor', 'number', 'number', 'CLS', 'class', 'CLS', 'course', 'CLS', 'department', 'CLS', 'employee', 'CLS', 'enroll', 'CLS', 'professor', 'CLS', 'student
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> And(cond left, cond right)]', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[cond -> And(cond left, cond right)]', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 404, 980, 404, 980, 980, 856, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 856, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 168, 502, 1095, 561, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 2, 1095, 1095, 1095, 1095, 1095, 1095, 2, 1095, 2, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 2, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
3
input_words: ['CLS', 'For', 'each', 'city', ',', 'list', 'their', 'names', 'in', 'decreasing', 'order', 'by', 'their', 'highest', 'station', 'latitude', '.', 'CLS', '*', 'text', 'CLS', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'latitude', 'number', 'CLS', 'longitude', 'number', 'CLS', 'dock', 'count', 'number', 'CLS', 'city', 'text', 'CLS', 'installation', 'date', 'text', 'CLS', 'station', 'id', 'number', 'CLS', 'bike', 'available', 'number', 'CLS', 'dock', 'available', 'number', 'CLS', 'time', 'text', 'CLS', 'id', 'number', 'CLS', 'duration', 'number', 'CLS', 'start', 'date', 'text', 'CLS', 'start', 'station', 'name', 'text', 'CLS', 'start', 'station', 'id', 'number', 'CLS', 'end', 'date', 'text', 'CLS', 'end', 'station', 'name', 'text', 'CLS', 'end', 'station', 'id', 'number', 'CLS', 'bike', 'id', 'number', 'CLS', 'subscription', 'type', 'text', 'CLS', 'zip', 'code', 'number', 'CLS', 'date', 'text', 'CLS', 'max', 'temperature', 'f', 'number', 'CLS', 'mean', 'temperature', 'f', 'number', 'CLS', 'min', 'temperature', 'f', 'number', 'CLS', 'max', 'dew', 'point', 'f', 'number', 'CLS', 'mean', 'dew', 'point', 'f', 'number', 'CLS', 'min', 'dew', 'point', 'f', 'number', 'CLS', 'max', 'humidity', 'number', 'CLS', 'mean', 'humidity', 'number', 'CLS', 'min', 'humidity', 'number', 'CLS', 'max', 'sea', 'level', 'pressure', 'inch', 'number', 'CLS', 'mean', 'sea', 'level', 'pressure', 'inch', 'number', 'CLS', 'min', 'sea', 'level', 'pressure', 'inch', 'number', 'CLS', 'max', 'visibility', 'mile', 'number', 'CLS', 'mean', 'visibility', 'mile', 'number', 'CLS', 'min', 'visibility', 'mile', 'number', 'CLS', 'max', 'wind', 'speed', 'mph', 'number', 'CLS', 'mean', 'wind', 'speed', 'mph', 'number', 'CLS', 'max', 'gust', 'speed', 'mph', 'number', 'CLS', 'precipitation', 'inch', 'number', 'CLS', 'cloud', 'cover', 'number', 'CLS', 'event', 'text', 'CLS', 'wind', 'dir', 'degree', 'number', 'CLS', 'zip', 'code', 'number', 'CLS', 'station', 'CLS', 'status', 'CLS', 'trip', 'CLS', 'weather
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[order_by -> order_by(order order, val_unit* val_units)]', 'ApplyRule[order -> Desc()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> Max()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 80, 912, 980, 221, 980, 980, 1546, 1026, 1115, 80, 812, 980, 221, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 1095, 1095, 1095, 561, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 561, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 561, 1095, 1095, 1095, 1095, 561, 1095, 561, 1095, 1095, 1095, 1095, 1095, 561, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 561, 1095, 1095, 368, 721, 1095, 368, 721, 1095, 1095, 1095, 1095, 368, 721, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 721, 1095, 1095, 1095, 1095, 561, 1095, 561, 1095, 561, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 721, 1095, 368, 721, 1095, 561, 1095, 368, 721, 1095, 368, 721, 1095, 368, 721, 1095, 1095, 561, 1095, 368, 721, 1095, 368]
4
input_words: ['CLS', 'List', 'all', 'the', 'activities', 'we', 'have', '.', 'CLS', '*', 'text', 'CLS', 'activity', 'id', 'number', 'CLS', 'activity', 'name', 'text', 'CLS', 'student', 'id', 'number', 'CLS', 'activity', 'id', 'number', 'CLS', 'faculty', 'id', 'number', 'CLS', 'activity', 'id', 'number', 'CLS', 'student', 'id', 'number', 'CLS', 'last', 'name', 'text', 'CLS', 'first', 'name', 'text', 'CLS', 'age', 'number', 'CLS', 'sex', 'text', 'CLS', 'major', 'number', 'CLS', 'advisor', 'number', 'CLS', 'city', 'code', 'text', 'CLS', 'faculty', 'id', 'number', 'CLS', 'last', 'name', 'text', 'CLS', 'first', 'name', 'text', 'CLS', 'rank', 'text', 'CLS', 'sex', 'text', 'CLS', 'phone', 'number', 'CLS', 'room', 'text', 'CLS', 'build', 'text', 'CLS', 'activity', 'CLS', 'participate', 'in', 'CLS', 'faculty', 'participate', 'in', 'CLS', 'student', 'CLS', 'faculty
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 2, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
5
input_words: ['CLS', 'How', 'many', 'distinct', 'artists', 'do', 'the', 'volumes', 'associate', 'to', '?', 'CLS', '*', 'text', 'CLS', 'artist', 'id', 'number', 'CLS', 'artist', 'text', 'CLS', 'age', 'number', 'CLS', 'famous', 'title', 'text', 'CLS', 'famous', 'release', 'date', 'text', 'CLS', 'volume', 'id', 'number', 'CLS', 'volume', 'issue', 'text', 'CLS', 'issue', 'date', 'text', 'CLS', 'week', 'on', 'top', 'number', 'CLS', 'song', 'text', 'CLS', 'artist', 'id', 'number', 'CLS', 'id', 'number', 'CLS', 'music', 'festival', 'text', 'CLS', 'date', 'of', 'ceremony', 'text', 'CLS', 'category', 'text', 'CLS', 'volume', 'number', 'CLS', 'result', 'text', 'CLS', 'artist', 'CLS', 'volume', 'CLS', 'music', 'festival
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> Count()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[True]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 28, 1115, 80, 912, 980, 1266, 980, 980, 1058, 404, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 1095, 1095, 1095, 561, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 561, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
6
input_words: ['CLS', 'Which', 'papers', 'have', '``', 'Stephanie', 'Weirich', "''", 'as', 'an', 'author', '?', 'CLS', '*', 'text', 'CLS', 'institution', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'country', 'text', 'CLS', 'author', 'id', 'number', 'CLS', 'last', 'name', 'text', 'CLS', 'first', 'name', 'text', 'CLS', 'paper', 'id', 'number', 'CLS', 'title', 'text', 'CLS', 'author', 'id', 'number', 'CLS', 'institution', 'id', 'number', 'CLS', 'paper', 'id', 'number', 'CLS', 'author', 'count', 'number', 'CLS', 'institution', 'CLS', 'author', 'CLS', 'paper', 'CLS', 'authorship', 'count
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> And(cond left, cond right)]', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[cond -> And(cond left, cond right)]', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> String(string s)]', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> String(string s)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 404, 980, 980, 856, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 856, 1391, 1115, 80, 912, 980, 221, 980, 869, 980, 1391, 1115, 80, 912, 980, 221, 980, 869, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
7
input_words: ['CLS', 'Return', 'the', 'id', 'and', 'full', 'name', 'of', 'the', 'customer', 'who', 'has', 'the', 'fewest', 'accounts', '.', 'CLS', '*', 'text', 'CLS', 'account', 'id', 'number', 'CLS', 'customer', 'id', 'number', 'CLS', 'account', 'name', 'text', 'CLS', 'other', 'account', 'detail', 'text', 'CLS', 'customer', 'id', 'number', 'CLS', 'customer', 'first', 'name', 'text', 'CLS', 'customer', 'last', 'name', 'text', 'CLS', 'customer', 'address', 'text', 'CLS', 'customer', 'phone', 'text', 'CLS', 'customer', 'email', 'text', 'CLS', 'other', 'customer', 'detail', 'text', 'CLS', 'card', 'id', 'number', 'CLS', 'customer', 'id', 'number', 'CLS', 'card', 'type', 'code', 'text', 'CLS', 'card', 'number', 'text', 'CLS', 'date', 'valid', 'from', 'time', 'CLS', 'date', 'valid', 'to', 'time', 'CLS', 'other', 'card', 'detail', 'text', 'CLS', 'transaction', 'id', 'number', 'CLS', 'previous', 'transaction', 'id', 'number', 'CLS', 'account', 'id', 'number', 'CLS', 'card', 'id', 'number', 'CLS', 'transaction', 'type', 'text', 'CLS', 'transaction', 'date', 'time', 'CLS', 'transaction', 'amount', 'number', 'CLS', 'transaction', 'comment', 'text', 'CLS', 'other', 'transaction', 'detail', 'text', 'CLS', 'account', 'CLS', 'customer', 'CLS', 'customer', 'card', 'CLS', 'financial', 'transaction
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[order_by -> order_by(order order, val_unit* val_units)]', 'ApplyRule[order -> Asc()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> Count()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'IntPrimitive[1]', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 980, 80, 912, 980, 221, 980, 980, 1546, 1238, 1115, 80, 28, 980, 221, 980, 980, 980, 671, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 168, 502, 1095, 1095, 561, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
8
input_words: ['CLS', 'What', 'are', 'the', 'names', 'and', 'ages', 'of', 'editors', '?', 'CLS', '*', 'text', 'CLS', 'journal', 'id', 'number', 'CLS', 'date', 'text', 'CLS', 'theme', 'text', 'CLS', 'sale', 'number', 'CLS', 'editor', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'age', 'number', 'CLS', 'editor', 'id', 'number', 'CLS', 'journal', 'id', 'number', 'CLS', 'work', 'type', 'text', 'CLS', 'journal', 'CLS', 'editor', 'CLS', 'journal', 'committee
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', '<END>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>']
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
9
input_words: ['CLS', 'For', 'all', 'directors', 'who', 'have', 'directed', 'more', 'than', 'one', 'movie', ',', 'what', 'movies', 'have', 'they', 'directed', 'and', 'what', 'are', 'their', 'names', '?', 'CLS', '*', 'text', 'CLS', 'movie', 'id', 'number', 'CLS', 'title', 'text', 'CLS', 'year', 'number', 'CLS', 'director', 'text', 'CLS', 'reviewer', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'reviewer', 'id', 'number', 'CLS', 'movie', 'id', 'number', 'CLS', 'rating', 'star', 'number', 'CLS', 'rating', 'date', 'time', 'CLS', 'movie', 'CLS', 'reviewer', 'CLS', 'rate', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>']
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[cond -> Ne(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[order_by -> order_by(order order, val_unit* val_units)]', 'ApplyRule[order -> Asc()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 91, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 980, 1546, 1238, 1115, 80, 912, 980, 221, 980, 1115, 80, 912, 980, 221, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 2, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 2, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
10
input_words: ['CLS', 'What', 'are', 'the', 'names', 'of', 'all', 'the', 'video', 'games', 'and', 'their', 'types', 'in', 'alphabetical', 'order', '?', 'CLS', '*', 'text', 'CLS', 'student', 'id', 'number', 'CLS', 'last', 'name', 'text', 'CLS', 'first', 'name', 'text', 'CLS', 'age', 'number', 'CLS', 'sex', 'text', 'CLS', 'major', 'number', 'CLS', 'advisor', 'number', 'CLS', 'city', 'code', 'text', 'CLS', 'game', 'id', 'number', 'CLS', 'game', 'name', 'text', 'CLS', 'game', 'type', 'text', 'CLS', 'student', 'id', 'number', 'CLS', 'game', 'id', 'number', 'CLS', 'hour', 'play', 'number', 'CLS', 'student', 'id', 'number', 'CLS', 'sport', 'name', 'text', 'CLS', 'hour', 'per', 'week', 'number', 'CLS', 'game', 'play', 'number', 'CLS', 'on', 'scholarship', 'text', 'CLS', 'student', 'CLS', 'video', 'game', 'CLS', 'play', 'game', 'CLS', 'sport', 'info', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>', '<PAD>']
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[order_by -> order_by(order order, val_unit* val_units)]', 'ApplyRule[order -> Asc()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 980, 1546, 1238, 1115, 80, 912, 980, 221, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
11
input_words: ['CLS', 'What', 'are', 'the', 'names', 'of', 'the', 'people', 'who', 'have', 'no', 'friends', 'who', 'are', 'students', '?', 'CLS', '*', 'text', 'CLS', 'name', 'text', 'CLS', 'age', 'number', 'CLS', 'city', 'text', 'CLS', 'gender', 'text', 'CLS', 'job', 'text', 'CLS', 'name', 'text', 'CLS', 'friend', 'text', 'CLS', 'year', 'number', 'CLS', 'person', 'CLS', 'person', 'friend
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> String(string s)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 980, 980, 980, 980, 980, 291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 1391, 1115, 80, 912, 980, 221, 980, 869, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
12
input_words: ['CLS', 'How', 'many', 'assessment', 'notes', 'are', 'there', 'in', 'total', '?', 'CLS', '*', 'text', 'CLS', 'address', 'type', 'code', 'text', 'CLS', 'address', 'type', 'description', 'text', 'CLS', 'detention', 'type', 'code', 'text', 'CLS', 'detention', 'type', 'description', 'text', 'CLS', 'incident', 'type', 'code', 'text', 'CLS', 'incident', 'type', 'description', 'text', 'CLS', 'address', 'id', 'number', 'CLS', 'line', '1', 'text', 'CLS', 'line', '2', 'text', 'CLS', 'line', '3', 'text', 'CLS', 'city', 'text', 'CLS', 'zip', 'postcode', 'text', 'CLS', 'state', 'province', 'county', 'text', 'CLS', 'country', 'text', 'CLS', 'other', 'address', 'detail', 'text', 'CLS', 'student', 'id', 'number', 'CLS', 'address', 'id', 'number', 'CLS', 'first', 'name', 'text', 'CLS', 'middle', 'name', 'text', 'CLS', 'last', 'name', 'text', 'CLS', 'cell', 'mobile', 'number', 'text', 'CLS', 'email', 'address', 'text', 'CLS', 'date', 'first', 'rental', 'time', 'CLS', 'date', 'leave', 'university', 'time', 'CLS', 'other', 'student', 'detail', 'text', 'CLS', 'teacher', 'id', 'number', 'CLS', 'address', 'id', 'number', 'CLS', 'first', 'name', 'text', 'CLS', 'middle', 'name', 'text', 'CLS', 'last', 'name', 'text', 'CLS', 'gender', 'text', 'CLS', 'cell', 'mobile', 'number', 'text', 'CLS', 'email', 'address', 'text', 'CLS', 'other', 'detail', 'text', 'CLS', 'note', 'id', 'number', 'CLS', 'student', 'id', 'number', 'CLS', 'teacher', 'id', 'number', 'CLS', 'date', 'of', 'note', 'time', 'CLS', 'text', 'of', 'note', 'text', 'CLS', 'other', 'detail', 'text', 'CLS', 'incident', 'id', 'number', 'CLS', 'incident', 'type', 'code', 'text', 'CLS', 'student', 'id', 'number', 'CLS', 'date', 'incident', 'start', 'time', 'CLS', 'date', 'incident', 'end', 'time', 'CLS', 'incident', 'summary', 'text', 'CLS', 'recommendation', 'text', 'CLS', 'other', 'detail', 'text', 'CLS', 'detention', 'id', 'number', 'CLS', 'detention', 'type', 'code', 'text', 'CLS', 'teacher', 'id', 'number', 'CLS', 'datetime', 'detention', 'start', 'time', 'CLS', 'datetime', 'detention', 'end', 'time', 'CLS', 'detention', 'summary', 'text', 'CLS', 'other', 'detail', 'text', 'CLS', 'student', 'id', 'number', 'CLS', 'address', 'id', 'number', 'CLS', 'date', 'address', 'from', 'time', 'CLS', 'date', 'address', 'to', 'time', 'CLS', 'monthly', 'rental', 'number', 'CLS', 'other', 'detail', 'text', 'CLS', 'student', 'id', 'number', 'CLS', 'detention', 'id', 'number', 'CLS', 'incident', 'id', 'number', 'CLS', 'reference', 'address', 'type', 'CLS', 'reference', 'detention', 'type', 'CLS', 'reference', 'incident', 'type', 'CLS', 'address', 'CLS', 'student', 'CLS', 'teacher', 'CLS', 'assessment', 'note', 'CLS', 'behavior', 'incident', 'CLS', 'detention', 'CLS', 'student', 'address', 'CLS', 'student', 'in', 'detention
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> Count()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 28, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 1095, 1095, 561, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 2, 1525, 1586, 721, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 721, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 721, 1095, 1095, 1095, 1095, 1095, 368, 721, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 721, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 721, 1095, 1095, 1095, 1095, 1095, 561, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 721, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 721, 1095, 368, 721, 1095, 1095, 1095, 1095]
13
input_words: ['CLS', 'What', 'are', 'the', 'lifespans', 'of', 'representatives', 'in', 'descending', 'order', 'of', 'vote', 'percent', '?', 'CLS', '*', 'text', 'CLS', 'election', 'id', 'number', 'CLS', 'representative', 'id', 'number', 'CLS', 'date', 'text', 'CLS', 'vote', 'number', 'CLS', 'vote', 'percent', 'number', 'CLS', 'seat', 'number', 'CLS', 'place', 'number', 'CLS', 'representative', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'state', 'text', 'CLS', 'party', 'text', 'CLS', 'lifespan', 'text', 'CLS', 'election', 'CLS', 'representative
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[order_by -> order_by(order order, val_unit* val_units)]', 'ApplyRule[order -> Desc()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 980, 980, 1546, 1026, 1115, 80, 912, 980, 221, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
14
input_words: ['CLS', 'What', 'are', 'the', 'details', 'of', 'all', 'sales', 'and', 'purchases', '?', 'CLS', '*', 'text', 'CLS', 'investor', 'id', 'number', 'CLS', 'investor', 'detail', 'text', 'CLS', 'lot', 'id', 'number', 'CLS', 'investor', 'id', 'number', 'CLS', 'lot', 'detail', 'text', 'CLS', 'transaction', 'type', 'code', 'text', 'CLS', 'transaction', 'type', 'description', 'text', 'CLS', 'transaction', 'id', 'number', 'CLS', 'investor', 'id', 'number', 'CLS', 'transaction', 'type', 'code', 'text', 'CLS', 'date', 'of', 'transaction', 'time', 'CLS', 'amount', 'of', 'transaction', 'number', 'CLS', 'share', 'count', 'text', 'CLS', 'other', 'detail', 'text', 'CLS', 'sale', 'transaction', 'id', 'number', 'CLS', 'sale', 'detail', 'text', 'CLS', 'purchase', 'transaction', 'id', 'number', 'CLS', 'purchase', 'detail', 'text', 'CLS', 'transaction', 'id', 'number', 'CLS', 'lot', 'id', 'number', 'CLS', 'investor', 'CLS', 'lot', 'CLS', 'reference', 'transaction', 'type', 'CLS', 'transaction', 'CLS', 'sale', 'CLS', 'purchase', 'CLS', 'transaction', 'lot
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
15
input_words: ['CLS', 'List', 'all', 'the', 'username', 'and', 'passwords', 'of', 'users', 'with', 'the', 'most', 'popular', 'role', '.', 'CLS', '*', 'text', 'CLS', 'role', 'code', 'text', 'CLS', 'role', 'description', 'text', 'CLS', 'user', 'id', 'number', 'CLS', 'role', 'code', 'text', 'CLS', 'user', 'name', 'text', 'CLS', 'user', 'login', 'text', 'CLS', 'password', 'text', 'CLS', 'document', 'structure', 'code', 'text', 'CLS', 'parent', 'document', 'structure', 'code', 'text', 'CLS', 'document', 'structure', 'description', 'text', 'CLS', 'functional', 'area', 'code', 'text', 'CLS', 'parent', 'functional', 'area', 'code', 'text', 'CLS', 'functional', 'area', 'description', 'text', 'CLS', 'image', 'id', 'number', 'CLS', 'image', 'alt', 'text', 'text', 'CLS', 'image', 'name', 'text', 'CLS', 'image', 'url', 'text', 'CLS', 'document', 'code', 'text', 'CLS', 'document', 'structure', 'code', 'text', 'CLS', 'document', 'type', 'code', 'text', 'CLS', 'access', 'count', 'number', 'CLS', 'document', 'name', 'text', 'CLS', 'document', 'code', 'text', 'CLS', 'functional', 'area', 'code', 'text', 'CLS', 'section', 'id', 'number', 'CLS', 'document', 'code', 'text', 'CLS', 'section', 'sequence', 'number', 'CLS', 'section', 'code', 'text', 'CLS', 'section', 'title', 'text', 'CLS', 'section', 'id', 'number', 'CLS', 'image', 'id', 'number', 'CLS', 'role', 'CLS', 'user', 'CLS', 'document', 'structure', 'CLS', 'functional', 'area', 'CLS', 'image', 'CLS', 'document', 'CLS', 'document', 'functional', 'area', 'CLS', 'document', 'section', 'CLS', 'document', 'section', 'image
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[order_by -> order_by(order order, val_unit* val_units)]', 'ApplyRule[order -> Desc()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> Count()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'IntPrimitive[1]', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 80, 912, 980, 221, 980, 980, 1546, 1026, 1115, 80, 28, 980, 221, 980, 980, 980, 671, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 2, 1525, 1586, 721, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
16
input_words: ['CLS', 'What', 'are', 'the', 'names', 'of', 'the', 'services', 'that', 'have', 'never', 'been', 'used', '?', 'CLS', '*', 'text', 'CLS', 'address', 'id', 'number', 'CLS', 'line', '1', 'number', 'building', 'text', 'CLS', 'town', 'city', 'text', 'CLS', 'zip', 'postcode', 'text', 'CLS', 'state', 'province', 'county', 'text', 'CLS', 'country', 'text', 'CLS', 'service', 'id', 'number', 'CLS', 'service', 'type', 'code', 'text', 'CLS', 'service', 'name', 'text', 'CLS', 'service', 'descriptio', 'text', 'CLS', 'form', 'id', 'number', 'CLS', 'form', 'type', 'code', 'text', 'CLS', 'service', 'id', 'number', 'CLS', 'form', 'number', 'text', 'CLS', 'form', 'name', 'text', 'CLS', 'form', 'description', 'text', 'CLS', 'individual', 'id', 'number', 'CLS', 'individual', 'first', 'name', 'text', 'CLS', 'individual', 'middle', 'name', 'text', 'CLS', 'inidividual', 'phone', 'text', 'CLS', 'individual', 'email', 'text', 'CLS', 'individual', 'address', 'text', 'CLS', 'individual', 'last', 'name', 'text', 'CLS', 'organization', 'id', 'number', 'CLS', 'date', 'form', 'time', 'CLS', 'organization', 'name', 'text', 'CLS', 'uk', 'vat', 'number', 'text', 'CLS', 'party', 'id', 'number', 'CLS', 'payment', 'method', 'code', 'text', 'CLS', 'party', 'phone', 'text', 'CLS', 'party', 'email', 'text', 'CLS', 'individual', 'id', 'number', 'CLS', 'organization', 'id', 'number', 'CLS', 'date', 'contact', 'from', 'time', 'CLS', 'date', 'contact', 'to', 'time', 'CLS', 'party', 'id', 'number', 'CLS', 'address', 'id', 'number', 'CLS', 'date', 'address', 'from', 'time', 'CLS', 'address', 'type', 'code', 'text', 'CLS', 'date', 'address', 'to', 'time', 'CLS', 'party', 'id', 'number', 'CLS', 'form', 'id', 'number', 'CLS', 'date', 'completion', 'start', 'time', 'CLS', 'form', 'status', 'code', 'text', 'CLS', 'date', 'fully', 'complete', 'time', 'CLS', 'book', 'id', 'number', 'CLS', 'customer', 'id', 'number', 'CLS', 'service', 'id', 'number', 'CLS', 'service', 'datetime', 'time', 'CLS', 'booking', 'make', 'date', 'time', 'CLS', 'address', 'CLS', 'service', 'CLS', 'form', 'CLS', 'individual', 'CLS', 'organization', 'CLS', 'party', 'CLS', 'organization', 'contact', 'individual', 'CLS', 'party', 'address', 'CLS', 'party', 'form', 'CLS', 'party', 'service
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 980, 980, 980, 980, 980, 291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
17
input_words: ['CLS', 'What', 'is', 'the', 'transaction', 'type', 'that', 'has', 'processed', 'the', 'greatest', 'total', 'amount', 'in', 'transactions', '?', 'CLS', '*', 'text', 'CLS', 'account', 'id', 'number', 'CLS', 'customer', 'id', 'number', 'CLS', 'account', 'name', 'text', 'CLS', 'other', 'account', 'detail', 'text', 'CLS', 'customer', 'id', 'number', 'CLS', 'customer', 'first', 'name', 'text', 'CLS', 'customer', 'last', 'name', 'text', 'CLS', 'customer', 'address', 'text', 'CLS', 'customer', 'phone', 'text', 'CLS', 'customer', 'email', 'text', 'CLS', 'other', 'customer', 'detail', 'text', 'CLS', 'card', 'id', 'number', 'CLS', 'customer', 'id', 'number', 'CLS', 'card', 'type', 'code', 'text', 'CLS', 'card', 'number', 'text', 'CLS', 'date', 'valid', 'from', 'time', 'CLS', 'date', 'valid', 'to', 'time', 'CLS', 'other', 'card', 'detail', 'text', 'CLS', 'transaction', 'id', 'number', 'CLS', 'previous', 'transaction', 'id', 'number', 'CLS', 'account', 'id', 'number', 'CLS', 'card', 'id', 'number', 'CLS', 'transaction', 'type', 'text', 'CLS', 'transaction', 'date', 'time', 'CLS', 'transaction', 'amount', 'number', 'CLS', 'transaction', 'comment', 'text', 'CLS', 'other', 'transaction', 'detail', 'text', 'CLS', 'account', 'CLS', 'customer', 'CLS', 'customer', 'card', 'CLS', 'financial', 'transaction
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[order_by -> order_by(order order, val_unit* val_units)]', 'ApplyRule[order -> Desc()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> Sum()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'IntPrimitive[1]', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 80, 912, 980, 221, 980, 980, 1546, 1026, 1115, 80, 477, 980, 221, 980, 980, 980, 671, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
18
input_words: ['CLS', 'What', 'is', 'the', 'name', ',', 'city', ',', 'country', ',', 'and', 'elevation', 'for', 'every', 'airport', 'in', 'the', 'city', 'of', 'New', 'York', '?', 'CLS', '*', 'text', 'CLS', 'route', 'id', 'number', 'CLS', 'destination', 'airport', 'id', 'number', 'CLS', 'destination', 'airport', 'text', 'CLS', 'source', 'airport', 'id', 'number', 'CLS', 'source', 'airport', 'text', 'CLS', 'airline', 'id', 'number', 'CLS', 'airline', 'text', 'CLS', 'code', 'share', 'text', 'CLS', 'airport', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'city', 'text', 'CLS', 'country', 'text', 'CLS', 'x', 'number', 'CLS', 'y', 'number', 'CLS', 'elevation', 'number', 'CLS', 'iata', 'text', 'CLS', 'icao', 'text', 'CLS', 'airline', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'iata', 'text', 'CLS', 'icao', 'text', 'CLS', 'call', 'sign', 'text', 'CLS', 'country', 'text', 'CLS', 'active', 'text', 'CLS', 'route', 'CLS', 'airport', 'CLS', 'airline
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> String(string s)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 869, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', '<END>', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 2, 1095, 1095, 1095, 2, 1095, 2, 1095, 1095, 1095, 1095, 1095, 1095, 2, 1525, 1586, 721, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
19
input_words: ['CLS', 'Show', 'all', 'origins', 'and', 'the', 'number', 'of', 'flights', 'from', 'each', 'origin', '.', 'CLS', '*', 'text', 'CLS', 'flight', 'number', 'number', 'CLS', 'origin', 'text', 'CLS', 'destination', 'text', 'CLS', 'distance', 'number', 'CLS', 'departure', 'date', 'time', 'CLS', 'arrival', 'date', 'time', 'CLS', 'price', 'number', 'CLS', 'airline', 'id', 'number', 'CLS', 'airline', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'distance', 'number', 'CLS', 'employee', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'salary', 'number', 'CLS', 'employee', 'id', 'number', 'CLS', 'airline', 'id', 'number', 'CLS', 'flight', 'CLS', 'aircraft', 'CLS', 'employee', 'CLS', 'certificate
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> Count()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 28, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 80, 912, 980, 221, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
20
input_words: ['CLS', 'Find', 'the', 'names', 'of', 'the', 'artists', 'who', 'have', 'produced', 'English', 'songs', 'but', 'have', 'never', 'received', 'rating', 'higher', 'than', '8', '.', 'CLS', '*', 'text', 'CLS', 'genre', 'name', 'text', 'CLS', 'rate', 'text', 'CLS', 'most', 'popular', 'in', 'text', 'CLS', 'artist', 'name', 'text', 'CLS', 'country', 'text', 'CLS', 'gender', 'text', 'CLS', 'prefer', 'genre', 'text', 'CLS', 'song', 'id', 'number', 'CLS', 'artist', 'name', 'text', 'CLS', 'file', 'size', 'text', 'CLS', 'duration', 'text', 'CLS', 'format', 'text', 'CLS', 'song', 'name', 'text', 'CLS', 'artist', 'name', 'text', 'CLS', 'country', 'text', 'CLS', 'song', 'id', 'number', 'CLS', 'genre', 'be', 'text', 'CLS', 'rate', 'number', 'CLS', 'language', 'text', 'CLS', 'releasedate', 'time', 'CLS', 'resolution', 'number', 'CLS', 'genre', 'CLS', 'artist', 'CLS', 'file', 'CLS', 'song
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[True]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> String(string s)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[True]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[cond -> Gt(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> Number(object f)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 1266, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 869, 980, 980, 980, 980, 980, 980, 291, 560, 1266, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 1566, 1115, 80, 912, 980, 221, 980, 1116, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
21
input_words: ['CLS', 'How', 'many', 'albums', 'does', 'Billy', 'Cobham', 'has', '?', 'CLS', '*', 'text', 'CLS', 'name', 'number', 'CLS', 'seq', 'text', 'CLS', 'id', 'text', 'CLS', 'name', 'text', 'CLS', 'id', 'number', 'CLS', 'title', 'text', 'CLS', 'artist', 'id', 'number', 'CLS', 'id', 'number', 'CLS', 'last', 'name', 'text', 'CLS', 'first', 'name', 'text', 'CLS', 'title', 'text', 'CLS', 'report', 'to', 'number', 'CLS', 'birth', 'date', 'time', 'CLS', 'hire', 'date', 'time', 'CLS', 'address', 'text', 'CLS', 'city', 'text', 'CLS', 'state', 'text', 'CLS', 'country', 'text', 'CLS', 'postal', 'code', 'text', 'CLS', 'phone', 'text', 'CLS', 'fax', 'text', 'CLS', 'email', 'text', 'CLS', 'id', 'number', 'CLS', 'first', 'name', 'text', 'CLS', 'last', 'name', 'text', 'CLS', 'company', 'text', 'CLS', 'address', 'text', 'CLS', 'city', 'text', 'CLS', 'state', 'text', 'CLS', 'country', 'text', 'CLS', 'postal', 'code', 'text', 'CLS', 'phone', 'text', 'CLS', 'fax', 'text', 'CLS', 'email', 'text', 'CLS', 'support', 'rep', 'id', 'number', 'CLS', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'id', 'number', 'CLS', 'customer', 'id', 'number', 'CLS', 'invoice', 'date', 'time', 'CLS', 'billing', 'address', 'text', 'CLS', 'billing', 'city', 'text', 'CLS', 'billing', 'state', 'text', 'CLS', 'billing', 'country', 'text', 'CLS', 'bill', 'postal', 'code', 'text', 'CLS', 'total', 'number', 'CLS', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'album', 'id', 'number', 'CLS', 'medium', 'type', 'id', 'number', 'CLS', 'genre', 'id', 'number', 'CLS', 'composer', 'text', 'CLS', 'millisecond', 'number', 'CLS', 'byte', 'number', 'CLS', 'unit', 'price', 'number', 'CLS', 'id', 'number', 'CLS', 'invoice', 'id', 'number', 'CLS', 'track', 'id', 'number', 'CLS', 'unit', 'price', 'number', 'CLS', 'quantity', 'number', 'CLS', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'playlist', 'id', 'number', 'CLS', 'track', 'id', 'number', 'CLS', 'sqlite', 'sequence', 'CLS', 'artist', 'CLS', 'album', 'CLS', 'employee', 'CLS', 'customer', 'CLS', 'genre', 'CLS', 'invoice', 'CLS', 'medium', 'type', 'CLS', 'track', 'CLS', 'invoice', 'line', 'CLS', 'playlist', 'CLS', 'playlist', 'track
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> Count()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> String(string s)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 28, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 1391, 1115, 80, 912, 980, 221, 980, 869, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
22
input_words: ['CLS', 'Find', 'the', 'name', 'and', 'id', 'of', 'accounts', 'whose', 'checking', 'balance', 'is', 'below', 'the', 'maximum', 'checking', 'balance', '.', 'CLS', '*', 'text', 'CLS', 'customer', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'customer', 'id', 'number', 'CLS', 'balance', 'number', 'CLS', 'customer', 'id', 'number', 'CLS', 'balance', 'number', 'CLS', 'account', 'CLS', 'saving', 'CLS', 'check
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[cond -> Lt(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ValSql(sql s)]', 'ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> Max()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 483, 1115, 80, 912, 980, 221, 980, 463, 291, 560, 221, 980, 228, 812, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095]
23
input_words: ['CLS', 'What', 'are', 'the', 'names', 'of', 'gymnasts', ',', 'ordered', 'by', 'their', 'heights', 'ascending', '?', 'CLS', '*', 'text', 'CLS', 'gymnast', 'id', 'number', 'CLS', 'floor', 'exercise', 'point', 'number', 'CLS', 'pommel', 'horse', 'point', 'number', 'CLS', 'ring', 'point', 'number', 'CLS', 'vault', 'point', 'number', 'CLS', 'parallel', 'bar', 'point', 'number', 'CLS', 'horizontal', 'bar', 'point', 'number', 'CLS', 'total', 'point', 'number', 'CLS', 'people', 'id', 'number', 'CLS', 'name', 'text', 'CLS', 'age', 'number', 'CLS', 'height', 'number', 'CLS', 'hometown', 'text', 'CLS', 'gymnast', 'CLS', 'people
target_words: ['ApplyRule[sql -> sql(select select, from from, cond? where, col_unit* group_by, order_by? order_by, cond? having, int? limit, sql? intersect, sql? except, sql? union)]', 'ApplyRule[select -> select(singleton is_distinct, agg* aggs)]', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[agg -> agg(agg_type agg_id, val_unit val_unit)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'ApplyRule[from -> from(table_unit* table_units, cond? conds)]', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'ApplyRule[table_unit -> Table(table table_id)]', 'Reduce', 'Reduce', 'ApplyRule[cond -> Eq(val_unit val_unit, val val1)]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'ApplyRule[val -> ColUnit(col_unit c)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'ApplyRule[order_by -> order_by(order order, val_unit* val_units)]', 'ApplyRule[order -> Asc()]', 'ApplyRule[val_unit -> Column(col_unit col_unit1)]', 'ApplyRule[col_unit -> col_unit(agg_type agg_id, column col_id, singleton is_distinct)]', 'ApplyRule[agg_type -> NoneAggOp()]', 'Reduce', 'SingletonPrimitive[False]', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce', 'Reduce
target_tokens: [291, 560, 221, 980, 228, 912, 1115, 80, 912, 980, 221, 980, 980, 1058, 404, 980, 404, 980, 980, 1391, 1115, 80, 912, 980, 221, 980, 722, 80, 912, 980, 221, 980, 980, 980, 1546, 1238, 1115, 80, 912, 980, 221, 980, 980, 980, 980, 980, 980, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
predicted_words: ['StringPrimitive["Astrid"]', 'StringPrimitive["%son%"]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Almeida"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["Jaskolski"]', 'StringPrimitive["%you%"]', 'StringPrimitive["Computer]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Timmothy"]', 'StringPrimitive["Physics"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["Jaskolski"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["Jaskolski"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["Jaskolski"]', 'StringPrimitive[[\',\', \'\', \'Kentucky"\']]', 'StringPrimitive["Frami"]', 'StringPrimitive["good"]']
predicted_tokens: [570, 1158, 561, 1095, 368, 721, 1525, 1586, 721, 1095, 561, 1095, 368, 61, 1525, 1586, 721, 1095, 1095, 1095, 168, 502, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 721, 1095, 1095, 1095, 1095, 1095, 1095, 368, 61, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 61, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 368, 61, 1095, 368, 721]
